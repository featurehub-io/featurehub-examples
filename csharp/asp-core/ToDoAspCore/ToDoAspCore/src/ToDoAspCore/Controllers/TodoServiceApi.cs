/*
 * Todo
 *
 * Sample todo-api
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Microsoft.AspNetCore.Authorization;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using ToDoAspCore.Attributes;
using ToDoAspCore.Models;

namespace ToDoAspCore.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class TodoServiceApiController : ControllerBase
    { 
        /// <summary>
        /// addTodo
        /// </summary>
        /// <param name="user"></param>
        /// <param name="todo"></param>
        /// <response code="201"></response>
        [HttpPost]
        [Route("/todo/{user}")]
        [ValidateModelState]
        [SwaggerOperation("AddTodo")]
        [SwaggerResponse(statusCode: 201, type: typeof(List<Todo>), description: "")]
        public virtual IActionResult AddTodo([FromRoute][Required]string user, [FromBody]Todo todo)
        {

            var result = new ObjectResult(new List<Todo> {todo});
            result.StatusCode = 201;
            return result;
            // return StatusCode(201, default(List<Todo>));
            // string exampleJson = null;
            // exampleJson = "{\n  \"id\" : \"id\",\n  \"title\" : \"title\",\n  \"when\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"resolved\" : true\n}";
            //
            // var example = exampleJson != null
            // ? JsonConvert.DeserializeObject<List<Todo>>(exampleJson)
            // : default(List<Todo>);
            // //TODO: Change the data returned
            // return new ObjectResult(example);
        }

        /// <summary>
        /// listTodos
        /// </summary>
        /// <param name="user"></param>
        /// <response code="200"></response>
        [HttpGet]
        [Route("/todo/{user}")]
        [ValidateModelState]
        [SwaggerOperation("ListTodos")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Todo>), description: "")]
        public virtual IActionResult ListTodos([FromRoute][Required]string user)
        { 

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Todo>));
            string exampleJson = null;
            exampleJson = "{\n  \"id\" : \"id\",\n  \"title\" : \"title\",\n  \"when\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"resolved\" : true\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Todo>>(exampleJson)
            : default(List<Todo>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// removeAll
        /// </summary>
        /// <param name="user"></param>
        /// <response code="204"></response>
        [HttpDelete]
        [Route("/todo/{user}")]
        [ValidateModelState]
        [SwaggerOperation("RemoveAllTodos")]
        public virtual IActionResult RemoveAllTodos([FromRoute][Required]string user)
        { 

            //TODO: Uncomment the next line to return response 204 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(204);

            throw new NotImplementedException();
        }

        /// <summary>
        /// removeTodo
        /// </summary>
        /// <param name="user"></param>
        /// <param name="id"></param>
        /// <response code="200"></response>
        [HttpDelete]
        [Route("/todo/{user}/{id}")]
        [ValidateModelState]
        [SwaggerOperation("RemoveTodo")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Todo>), description: "")]
        public virtual IActionResult RemoveTodo([FromRoute][Required]string user, [FromRoute][Required]string id)
        { 

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Todo>));
            string exampleJson = null;
            exampleJson = "{\n  \"id\" : \"id\",\n  \"title\" : \"title\",\n  \"when\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"resolved\" : true\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Todo>>(exampleJson)
            : default(List<Todo>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// resolveTodo
        /// </summary>
        /// <param name="id"></param>
        /// <param name="user"></param>
        /// <response code="200"></response>
        [HttpPut]
        [Route("/todo/{user}/{id}/resolve")]
        [ValidateModelState]
        [SwaggerOperation("ResolveTodo")]
        [SwaggerResponse(statusCode: 200, type: typeof(List<Todo>), description: "")]
        public virtual IActionResult ResolveTodo([FromRoute][Required]string id, [FromRoute][Required]string user)
        { 

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(List<Todo>));
            string exampleJson = null;
            exampleJson = "{\n  \"id\" : \"id\",\n  \"title\" : \"title\",\n  \"when\" : \"2000-01-23T04:56:07.000+00:00\",\n  \"resolved\" : true\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<List<Todo>>(exampleJson)
            : default(List<Todo>);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
